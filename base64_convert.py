import base64
from io import BytesIO
import fitz  # PyMuPDF
from PIL import Image


base64_str = "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"

# Decode the base64 string
pdf_bytes = base64.b64decode(base64_str)

# Load the PDF
pdf_document = fitz.open(stream=BytesIO(pdf_bytes), filetype="pdf")

# Iterate through each page in the PDF
for page_number in range(len(pdf_document)):
    page = pdf_document.load_page(page_number)
    pix = page.get_pixmap()  # Render page to an image
    img = Image.frombytes("RGB", [pix.width, pix.height], pix.samples)

    # Save the image
    img.save(f'output_page_{page_number + 1}.png')

print("PDF pages have been converted to images.")
